C
LC_CTYPE
install.packages("shiny")
install.packages("dataser")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("magrittr")
install.packages("XML")
install.packages("reshape")
install.packages("gsheet")
install.packages("ggplot2")
install.packages("scales")
install.packages("zoo")
install.packages("pracma")
install.packages("psych")
install.packages("astro")
install.packages("hash")
install.packages("googlesheets")
install.packages("hash")
setwd("~/Google Drive File Stream/My Drive/Innovation Service/Project_JETSON/Project Documentation /Code/Optimus/scriptoni/corrs")
#first install the following packages: readxl, mice, VIM, missForest, googlesheets. like: install.packages("googlesheets")
library(readxl)
library(mice)
library(googlesheets)
library(dplyr)
library(mice)
library(VIM)
library(missForest)
findMICE <- function(totest){
#Generate 10% missing values at Random
arrivals.mis <- prodNA(region, noNA = 0.1)
arrivals.mis <-select(arrivals.mis, actualarrivals, totest)
#imputation of NAs
arrivalsimp <- mice(arrivals.mis, m=5, maxit=50, meth='pmm', seed=500, print=FALSE)
#summary(arrivalsimp)
completeData <- complete(arrivalsimp,2)
a <- cor(completeData)
#return the mice
return(a[2])
}
#function to gather MICE AIC BIC and PCC
write_inlocal <- function(indx){
storage <- list()
ice <- list()
cib <- list()
mic <- list()
cor <- list()
pcc <- list()
for(i in names(Models)){
print(i)
linearMod <- lm( unlist(actualarrivals[]) ~ unlist(Models[i]), data=region)
sampleMod <- lm( unlist(actualarrivals) ~ unlist(Models[i]), data=region)
summary(linearMod)
storage[[i]] <- linearMod
print(AIC(linearMod))
print(BIC(linearMod))
suom <- 0
for (j in 1:10){
print(j)
suom <- suom + findMICE(i)
print(suom)
}
p <- 0
this <- match("11/1/2016",Date[[1]])
that <- lastmonth-3
for (j in this:that){
temps <- (unlist(unlist(Models[i]))[[j]]/as.numeric(unlist(actualarrivals)[[j]]))*100
if(is.na(temps)){
p<-p
}
else if (temps <= 115 && temps >= 75){
if(grepl("JUN",i)){
if(j >= 91){p <- p + 2}
else{ p <- p + 1}
}
else{
if(j >= 94){ p <- p + 2 }
else{ p <- p + 1 }
}
}
else{
p <- p
}
}
pcc[[i]] <- (1/(103-83))*p
mic[[i]] <- suom/10
ice[[i]] <- as.numeric(AIC(linearMod))
cib[[i]] <- as.numeric(BIC(linearMod))
two_vects <-data.frame(as.numeric(actualarrivals[[1]]),Models[i][[1]][1:length(actualarrivals[[1]])])
cor[[i]] <- as.numeric(cor(two_vects,use="complete.obs")[[2]])
}
return(K <- rbind(names = c(names(Models)),
AIC=c(ice), BIC=c(cib),
MICE = c(mic), PCC = c(pcc), COR = c(cor)))
}
#name your data framework (df) by reading data from googlesheets (automatizing)
myURL <-"https://docs.google.com/spreadsheets/d/1-Dbci2hXNMSzyEW6FDS-3zVYFcpaxTrgmQEXeIROIp8/edit?usp=sharing"
region<-read.csv(url(myURL))
sheet <-gs_title("correlations")
#get the key of your sheet
sheet_key <-gs_gap_key()
all_regions <- sheet$n_ws
all_names <- sheet$ws$ws_title
#GO THROUGH ALL THE SHEETS
for (indx in 18:all_regions){
print(indx)
#region <- sheet %>% gs_read_csv(ws=i)
lastmonth <- paste(toString(as.numeric(format(Sys.time(),"%m"))),
"/1/",format(Sys.time(),"%Y"),sep="")
Date <- sheet %>% gs_read(w= indx, range = "A1:A900")
lastmonth <- match(lastmonth,Date[[1]])
lastmonth <- lastmonth + 1
Date <- sheet %>% gs_read(w= indx,
range = paste("A1:A",toString(lastmonth),sep = ""))
actualarrivals <- (sheet %>% gs_read(w= indx,
range = paste("B1:B",toString(lastmonth),sep = "")))
region <- sheet %>% gs_read_csv(ws= indx)
Models <- region[,c(-1,-2)]
to_write <- write_inlocal(indx)
write.csv(to_write, file =paste("all",all_names[indx],".csv",sep=""),row.names = FALSE)
}
#function to gather MICE AIC BIC and PCC
write_inlocal <- function(indx){
storage <- list()
ice <- list()
cib <- list()
mic <- list()
cor <- list()
pcc <- list()
for(i in names(Models)){
print(i)
linearMod <- lm( unlist(actualarrivals[]) ~ unlist(Models[i]), data=region)
sampleMod <- lm( unlist(actualarrivals) ~ unlist(Models[i]), data=region)
summary(linearMod)
storage[[i]] <- linearMod
print(AIC(linearMod))
print(BIC(linearMod))
suom <- 0
for (j in 1:10){
print(j)
suom <- suom + findMICE(i)
print(suom)
}
p <- 0
this <- match("11/1/2016",Date[[1]])
that <- lastmonth-3
for (j in this:that){
temps <- (unlist(unlist(Models[i]))[[j]]/as.numeric(unlist(actualarrivals)[[j]]))*100
if(is.na(temps)){
p<-p
}
else if (temps <= 115 && temps >= 75){
if(grepl("JUN",i)){
if(j >= 91){p <- p + 2}
else{ p <- p + 1}
}
else{
if(j >= 94){ p <- p + 2 }
else{ p <- p + 1 }
}
}
else{
p <- p
}
}
pcc[[i]] <- (1/(103-83))*p
mic[[i]] <- suom/10
ice[[i]] <- as.numeric(AIC(linearMod))
cib[[i]] <- as.numeric(BIC(linearMod))
two_vects <-data.frame(actualarrivals[[1]],Models[i][[1]][1:length(actualarrivals[[1]])])
cor[[i]] <- as.numeric(cor(two_vects,use="complete.obs")[[2]])
}
return(K <- rbind(names = c(names(Models)),
AIC=c(ice), BIC=c(cib),
MICE = c(mic), PCC = c(pcc), COR = c(cor)))
}
#name your data framework (df) by reading data from googlesheets (automatizing)
myURL <-"https://docs.google.com/spreadsheets/d/1-Dbci2hXNMSzyEW6FDS-3zVYFcpaxTrgmQEXeIROIp8/edit?usp=sharing"
region<-read.csv(url(myURL))
sheet <-gs_title("correlations")
#get the key of your sheet
sheet_key <-gs_gap_key()
all_regions <- sheet$n_ws
all_names <- sheet$ws$ws_title
#GO THROUGH ALL THE SHEETS
for (indx in 18:all_regions){
print(indx)
#region <- sheet %>% gs_read_csv(ws=i)
lastmonth <- paste(toString(as.numeric(format(Sys.time(),"%m"))),
"/1/",format(Sys.time(),"%Y"),sep="")
Date <- sheet %>% gs_read(w= indx, range = "A1:A900")
lastmonth <- match(lastmonth,Date[[1]])
lastmonth <- lastmonth + 1
Date <- sheet %>% gs_read(w= indx,
range = paste("A1:A",toString(lastmonth),sep = ""))
actualarrivals <- (sheet %>% gs_read(w= indx,
range = paste("B1:B",toString(lastmonth),sep = "")))
region <- sheet %>% gs_read_csv(ws= indx)
Models <- region[,c(-1,-2)]
to_write <- write_inlocal(indx)
write.csv(to_write, file =paste("all",all_names[indx],".csv",sep=""),row.names = FALSE)
}
#function to gather MICE AIC BIC and PCC
write_inlocal <- function(indx){
storage <- list()
ice <- list()
cib <- list()
mic <- list()
cor <- list()
pcc <- list()
for(i in names(Models)){
print(i)
linearMod <- lm( unlist(actualarrivals[]) ~ unlist(Models[i]), data=region)
sampleMod <- lm( unlist(actualarrivals) ~ unlist(Models[i]), data=region)
summary(linearMod)
storage[[i]] <- linearMod
print(AIC(linearMod))
print(BIC(linearMod))
suom <- 0
for (j in 1:10){
print(j)
suom <- suom + findMICE(i)
print(suom)
}
p <- 0
this <- match("11/1/2016",Date[[1]])
that <- lastmonth-3
for (j in this:that){
temps <- (unlist(unlist(Models[i]))[[j]]/as.numeric(unlist(actualarrivals)[[j]]))*100
if(is.na(temps)){
p<-p
}
else if (temps <= 115 && temps >= 75){
if(grepl("JUN",i)){
if(j >= 91){p <- p + 2}
else{ p <- p + 1}
}
else{
if(j >= 94){ p <- p + 2 }
else{ p <- p + 1 }
}
}
else{
p <- p
}
}
pcc[[i]] <- (1/(103-83))*p
mic[[i]] <- suom/10
ice[[i]] <- as.numeric(AIC(linearMod))
cib[[i]] <- as.numeric(BIC(linearMod))
two_vects <-data.frame(as.numeric(actualarrivals[[1]]),Models[i][[1]][1:length(actualarrivals[[1]])])
cor[[i]] <- as.numeric(cor(two_vects,use="complete.obs")[[2]])
}
return(K <- rbind(names = c(names(Models)),
AIC=c(ice), BIC=c(cib),
MICE = c(mic), PCC = c(pcc), COR = c(cor)))
}
#name your data framework (df) by reading data from googlesheets (automatizing)
myURL <-"https://docs.google.com/spreadsheets/d/1-Dbci2hXNMSzyEW6FDS-3zVYFcpaxTrgmQEXeIROIp8/edit?usp=sharing"
region<-read.csv(url(myURL))
sheet <-gs_title("correlations")
#get the key of your sheet
sheet_key <-gs_gap_key()
all_regions <- sheet$n_ws
all_names <- sheet$ws$ws_title
#GO THROUGH ALL THE SHEETS
for (indx in 18:all_regions){
print(indx)
#region <- sheet %>% gs_read_csv(ws=i)
lastmonth <- paste(toString(as.numeric(format(Sys.time(),"%m"))),
"/1/",format(Sys.time(),"%Y"),sep="")
Date <- sheet %>% gs_read(w= indx, range = "A1:A900")
lastmonth <- match(lastmonth,Date[[1]])
lastmonth <- lastmonth + 1
Date <- sheet %>% gs_read(w= indx,
range = paste("A1:A",toString(lastmonth),sep = ""))
actualarrivals <- (sheet %>% gs_read(w= indx,
range = paste("B1:B",toString(lastmonth),sep = "")))
region <- sheet %>% gs_read_csv(ws= indx)
Models <- region[,c(-1,-2)]
to_write <- write_inlocal(indx)
write.csv(to_write, file =paste("all",all_names[indx],".csv",sep=""),row.names = FALSE)
}
#GO THROUGH ALL THE SHEETS
for (indx in 18:all_regions){
print(indx)
#region <- sheet %>% gs_read_csv(ws=i)
lastmonth <- paste(toString(as.numeric(format(Sys.time(),"%m"))),
"/1/",format(Sys.time(),"%Y"),sep="")
Date <- sheet %>% gs_read(w= indx, range = "A1:A900")
lastmonth <- match(lastmonth,Date[[1]])
lastmonth <- lastmonth + 1
Date <- sheet %>% gs_read(w= indx,
range = paste("A1:A",toString(lastmonth),sep = ""))
actualarrivals <- (sheet %>% gs_read(w= indx,
range = paste("B1:B",toString(lastmonth),sep = "")))
region <- sheet %>% gs_read_csv(ws= indx)
Models <- region[,c(-1,-2)]
to_write <- write_inlocal(indx)
write.csv(to_write, file =paste("all",all_names[indx],".csv",sep=""),row.names = FALSE)
}
setwd("~/Google Drive File Stream/My Drive/Innovation Service/Project_JETSON/Project Documentation /Code/Optimus/scriptoni/corrs")
#GO THROUGH ALL THE SHEETS
for (indx in 18:all_regions){
print(indx)
#region <- sheet %>% gs_read_csv(ws=i)
lastmonth <- paste(toString(as.numeric(format(Sys.time(),"%m"))),
"/1/",format(Sys.time(),"%Y"),sep="")
Date <- sheet %>% gs_read(w= indx, range = "A1:A900")
lastmonth <- match(lastmonth,Date[[1]])
lastmonth <- lastmonth + 1
Date <- sheet %>% gs_read(w= indx,
range = paste("A1:A",toString(lastmonth),sep = ""))
actualarrivals <- (sheet %>% gs_read(w= indx,
range = paste("B1:B",toString(lastmonth),sep = "")))
region <- sheet %>% gs_read_csv(ws= indx)
Models <- region[,c(-1,-2)]
to_write <- write_inlocal(indx)
write.csv(to_write, file =paste("all",all_names[indx],".csv",sep=""),row.names = FALSE)
}
setwd("~/")
setwd("~/Google Drive File Stream/My Drive/Innovation Service/Project_JETSON/Project Documentation /Code/Optimus/shinyapp-somalia")
shiny::runApp('~/Google Drive File Stream/My Drive/Innovation Service/Project_JETSON/Project Documentation /Code/Optimus/shinyapp-somalia')
#first install the following packages: readxl, mice, VIM, missForest, googlesheets. like: install.packages("googlesheets")
library(readxl)
library(mice)
library(googlesheets)
library(dplyr)
library(mice)
library(VIM)
library(missForest)
#MICE
findMICE <- function(totest){
#Generate 10% missing values at Random
arrivals.mis <- prodNA(region, noNA = 0.1)
arrivals.mis <-select(arrivals.mis, actualarrivals, totest)
#imputation of NAs
arrivalsimp <- mice(arrivals.mis, m=5, maxit=50, meth='pmm', seed=500, print=FALSE)
#summary(arrivalsimp)
completeData <- complete(arrivalsimp,2)
a <- cor(completeData)
#return the mice
return(a[2])
}
#function to gather MICE AIC BIC and PCC
write_inlocal <- function(indx){
storage <- list()
ice <- list()
cib <- list()
mic <- list()
cor <- list()
pcc <- list()
for(i in names(Models)){
print(i)
linearMod <- lm( unlist(actualarrivals[]) ~ unlist(Models[i]), data=region)
sampleMod <- lm( unlist(actualarrivals) ~ unlist(Models[i]), data=region)
summary(linearMod)
storage[[i]] <- linearMod
print(AIC(linearMod))
print(BIC(linearMod))
suom <- 0
for (j in 1:10){
print(j)
suom <- suom + findMICE(i)
print(suom)
}
p <- 0
this <- match("11/1/2016",Date[[1]])
that <- lastmonth-3
for (j in this:that){
temps <- (unlist(unlist(Models[i]))[[j]]/as.numeric(unlist(actualarrivals)[[j]]))*100
if(is.na(temps)){
p<-p
}
else if (temps <= 115 && temps >= 75){
if(grepl("JUN",i)){
if(j >= 91){p <- p + 2}
else{ p <- p + 1}
}
else{
if(j >= 94){ p <- p + 2 }
else{ p <- p + 1 }
}
}
else{
p <- p
}
}
pcc[[i]] <- (1/(103-83))*p
mic[[i]] <- suom/10
ice[[i]] <- as.numeric(AIC(linearMod))
cib[[i]] <- as.numeric(BIC(linearMod))
two_vects <-data.frame(as.numeric(actualarrivals[[1]]),Models[i][[1]][1:length(actualarrivals[[1]])])
cor[[i]] <- as.numeric(cor(two_vects,use="complete.obs")[[2]])
}
return(K <- rbind(names = c(names(Models)),
AIC=c(ice), BIC=c(cib),
MICE = c(mic), PCC = c(pcc), COR = c(cor)))
}
#THIS IS YOUR MAIN
#name your data framework (df) by reading data from googlesheets (automatizing)
myURL <-"https://docs.google.com/spreadsheets/d/1-Dbci2hXNMSzyEW6FDS-3zVYFcpaxTrgmQEXeIROIp8/edit?usp=sharing"
region<-read.csv(url(myURL))
sheet <-gs_title("correlations")
#get the key of your sheet
sheet_key <-gs_gap_key()
all_regions <- sheet$n_ws
all_names <- sheet$ws$ws_title
#GO THROUGH ALL THE SHEETS
for (indx in 9:all_regions){
print(indx)
#region <- sheet %>% gs_read_csv(ws=i)
lastmonth <- paste(toString(as.numeric(format(Sys.time(),"%m"))),
"/1/",format(Sys.time(),"%Y"),sep="")
Date <- sheet %>% gs_read(w= indx, range = "A1:A900")
lastmonth <- match(lastmonth,Date[[1]])
lastmonth <- lastmonth + 1
Date <- sheet %>% gs_read(w= indx,
range = paste("A1:A",toString(lastmonth),sep = ""))
actualarrivals <- (sheet %>% gs_read(w= indx,
range = paste("B1:B",toString(lastmonth),sep = "")))
region <- sheet %>% gs_read_csv(ws= indx)
Models <- region[,c(-1,-2)]
to_write <- write_inlocal(indx)
write.csv(to_write, file =paste("all",all_names[indx],".csv",sep=""),row.names = FALSE)
}
